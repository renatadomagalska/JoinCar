@using JoinCar.Database.Entities
@using Microsoft.AspNet.Identity
@model IEnumerable<object>
@{
    Trip trip = Model.ToList()[0] as Trip;
    List<ApplicationUser> passengers = Model.ToList()[1] as List<ApplicationUser>;
}

@{
    ViewBag.Title = "Details";
}

<div id="fb-root"></div>
<script>
    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s);
        js.id = id;
        js.src = "//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.6&appId=1073333016046323";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
</script>
<script type="text/javascript" language="javascript">jQuery('FC').attr('data-href', window.location.href.split('?')[0]);</script>
<script type="text/javascript" language="javascript">jQuery('FL').attr('data-href', window.location.href.split('?')[0]);</script>
<script src="http://maps.googleapis.com/maps/api/js?v=3&key=AIzaSyDO1JcTRY5TngKBh8MvyuWdC4v1_zzizQ4"></script>
<script>

    var map;
    var wayps = [];
    var geocoder;
    var start_geocoded;
    var end_geocoded;
    var directionsService;
    var directionsDisplay;

    function initialize() {
        directionsService = new google.maps.DirectionsService;
        directionsDisplay = new google.maps.DirectionsRenderer;
        var mapProp = {
            center: { lat: -34.397, lng: 150.644 },
            zoom: 5,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        //        google.maps.event.addListener(map, 'click', function (event) {
        //            placeMarker(event.latLng);
        //        });
    }

    //    function change() {
    //        document.getElementById('googleMap').style.visibility = 'visible';
    //        var elem = document.getElementById("submit_road");
    //        if (elem.value == "Create Map") elem.value = "Create Road";
    //    }
    //    function createRoad() {
    //        change();
    //        directionsDisplay.setMap(map);
    //        document.getElementById('submit_road').addEventListener('click', function () {
    //            calculateAndDisplayRoute(directionsService, directionsDisplay);
    //        });
    //        var geocoder = new google.maps.Geocoder();
    //        geocodeAddress(geocoder, document.getElementById("From").value, "start");
    //        geocodeAddress(geocoder, document.getElementById("To").value, "end");
    //    }
    //    function geocodeAddress(geocoder, address, type) {
    //        geocoder.geocode({ 'address': address }, function (results, status) {
    //            if (status === google.maps.GeocoderStatus.OK) {
    //                map.setCenter(results[0].geometry.location);
    //                marker = new google.maps.Marker({
    //                    map: map,
    //                    position: results[0].geometry.location
    //                });
    //                if(type.localeCompare("start"))
    //                    start_geocoded = new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng());
    //                else
    //                    end_geocoded = new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng());
    //
    //            } else {
    //                alert('Geocode was not successful for the following reason: ' + status);
    //            }
    //
    //        });
    //    }
    //    function placeMarker(location) {
    //        new google.maps.Marker({position: location, map: map, });
    //        wayps.push({location: location,stopover: true});
    //    }
    //    function calculateAndDisplayRoute(directionsService, directionsDisplay) {
    //        directionsService.route({
    //            origin: start_geocoded,
    //            destination: end_geocoded,
    //            waypoints: wayps,
    //            optimizeWaypoints: true,
    //            travelMode: google.maps.TravelMode.DRIVING
    //        }, function (response, status) {
    //            if (status === google.maps.DirectionsStatus.OK) {
    //                directionsDisplay.setDirections(response);
    //                var jsonValue = '{' +  "origin:"+ JSON.stringify(start_geocoded)+",destination:"+ JSON.stringify(end_geocoded)+ ",waypoints:"+ JSON.stringify(wayps) + '}'
    //                document.getElementById('JsonDirections').value = String(jsonValue);
    //            } else {
    //                window.alert('Directions request failed due to ' + status);
    //            }
    //        });
    //    }
    google.maps.event.addDomListener(window, 'load', initialize);
</script>

<h2>Details</h2>

<div>
    <h4>Trip</h4>
    <hr/>
    <div id="googleMap" style="width: 500px; height: 380px;"></div>
    @Html.Partial("_TripDetails", trip)

    <h2>
        @{

            if (User.Identity.GetUserId() != trip?.UserId)
            {
                // @Html.ActionLink("Join car", "UserInterests", new { tripId = Model.Id })
                if (trip?.DateTime < DateTime.Now)
                {
                    <br/>
                    @Html.ActionLink("Write opinion", "CreateOpinion", new {tripId = trip.Id})
                }
            }
        }
    </h2>
</div>

@Html.Partial("_PassengersList", passengers)

<div id="FL" class="fb-like" data-href="" data-layout="standard" data-action="like" data-show-faces="true" data-share="true"></div><br />
<div id="FC" class="fb-comments" data-href="" data-width="600" data-numposts="5"></div>


@{
    if (User.Identity.GetUserId() == trip?.UserId)
    {
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = trip?.Id }) |
            @Html.ActionLink("Back to List", "Index")
        </p>
    }
    else
    {
        <p>
            @Html.ActionLink("Back to List", "Index")
        </p>
    }
}

