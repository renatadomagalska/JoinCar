@using JoinCar.Database.Entities
@using Microsoft.AspNet.Identity
@model IEnumerable<object>
@{
    Trip trip = Model.ToList()[0] as Trip;
    List<ApplicationUser> passengers = Model.ToList()[1] as List<ApplicationUser>;
    List<Interest> userInterests = Model.ToList()[2] as List<Interest>;
}

@{
    ViewBag.Title = "Details";
}

<div id="fb-root"></div>
<script>
    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s);
        js.id = id;
        js.src = "//connect.facebook.net/en_GB/sdk.js#xfbml=1&version=v2.6&appId=1073333016046323";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
</script>
<script type="text/javascript" language="javascript">jQuery('FC').attr('data-href', window.location.href.split('?')[0]);</script>
<script type="text/javascript" language="javascript">jQuery('FL').attr('data-href', window.location.href.split('?')[0]);</script>
<script src="http://maps.googleapis.com/maps/api/js?v=3&key=AIzaSyDO1JcTRY5TngKBh8MvyuWdC4v1_zzizQ4"></script>
<script>

    var map;
    var wayps = [];
    var geocoder;
    var start_geocoded;
    var end_geocoded;
    var directionsService;
    var directionsDisplay;

    function initialize() {
        directionsService = new google.maps.DirectionsService;
        directionsDisplay = new google.maps.DirectionsRenderer;
        var mapProp = {
            center: { lat: 52.397, lng: 19.644 },
            zoom: 5,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        var stringJson = document.getElementById('JsonDirections').value;
        var json = JSON.parse(stringJson);
        directionsDisplay.setMap(map);
        calculateAndDisplayRoute(directionsService, directionsDisplay,json);
    }

        function placeMarker(location) {
            new google.maps.Marker({position: location, map: map, });
            wayps.push({location: location,stopover: true});
        }
        function calculateAndDisplayRoute(directionsService, directionsDisplay, json) {
            directionsService.route({
                origin: new google.maps.LatLng( json.origin.lat,  json.origin.lng),
                destination:  new google.maps.LatLng( json.destination.lat,  json.destination.lng),
                waypoints: json.waypoints,
                optimizeWaypoints: true,
                travelMode: google.maps.TravelMode.DRIVING
            }, function (response, status) {
                if (status === google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        }
    google.maps.event.addDomListener(window, 'load', initialize);
</script>

<h2>Details</h2>

<div>
    <h4>Trip</h4>
    <hr />
    <div id="googleMap" style="width: 500px; height: 380px;"></div>
    @Html.Partial("_TripDetails", trip)

    @{
        if (User.Identity.GetUserId() != trip?.UserId)
        {
            if (trip?.DateTime > DateTime.Now)
            {
                if (trip?.AvailableSeats > 0 && userInterests != null && userInterests.All(i => i.TripId != trip.Id))
                {
                    <form action="" method="post">
                        @Html.AntiForgeryToken()
                        <input type="submit" value="JoinCar" name="action:JoinCar" class="btn btn-default"/>
                    </form>
                }

                if (userInterests != null && userInterests.Any(interest => interest.TripId == trip?.Id))
                {
                    <form action="" method="post">
                        @Html.AntiForgeryToken()
                        <input type="submit" value="LeaveCar" name="action:LeaveCar" class="btn btn-default"/>
                    </form>
                }
            }
            else if (userInterests != null && userInterests.Any(interest => interest.TripId == trip?.Id))
            {
                <br />
                <h2>@Html.ActionLink("Write opinion", "CreateOpinion", new { tripId = trip?.Id })</h2>
            }
        }
    }
</div>

<h2>Passengers</h2>
@Html.Partial("_PassengersList", passengers)

<div id="FL" class="fb-like" data-href="" data-layout="standard" data-action="like" data-show-faces="true" data-share="true"></div><br />
<div id="FC" class="fb-comments" data-href="" data-width="600" data-numposts="5"></div>


@{
    if (User.Identity.GetUserId() == trip?.UserId)
    {
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = trip?.Id }) |
            @Html.ActionLink("Back to List", "Index")
        </p>
    }
    else
    {
        <p>
            @Html.ActionLink("Back to List", "Index")
        </p>
    }
}

