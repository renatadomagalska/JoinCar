@model JoinCar.Database.Entities.Trip

@{
    ViewBag.Title = "Details";
}
<!DOCTYPE html>
<html>
<head>
<script src="http://maps.googleapis.com/maps/api/js?v=3&key=AIzaSyDO1JcTRY5TngKBh8MvyuWdC4v1_zzizQ4"></script>
<script>
    var map;
    var wayps = [];
    var geocoder;
    var start_loc = "Kraków";
    var end_loc = "Warszawa";
    var start_geocoded;
    var end_geocoded;

    function initialize() {
        var directionsService = new google.maps.DirectionsService;
        var directionsDisplay = new google.maps.DirectionsRenderer;
        var mapProp = {
            zoom: 5,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        directionsDisplay.setMap(map);
        document.getElementById('submit')
            .addEventListener('click',
                function() {
                    calculateAndDisplayRoute(directionsService, directionsDisplay);
                });
        var geocoder = new google.maps.Geocoder();
        geocodeAddress(geocoder, start_loc, "start");
        geocodeAddress(geocoder, end_loc, "end");
        google.maps.event.addListener(map,
            'click',
            function(event) {
                placeMarker(event.latLng);
            });
    }

    function geocodeAddress(geocoder, address, type) {
        geocoder.geocode({ 'address': address },
            function(results, status) {
                if (status === google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                    if (type.localeCompare("start"))
                        start_geocoded = new google.maps.LatLng(results[0].geometry.location.lat(),
                            results[0].geometry.location.lng());
                    else
                        end_geocoded = new google.maps.LatLng(results[0].geometry.location.lat(),
                            results[0].geometry.location.lng());
                    </script>
<h2>Details</h2>

<div>
    <h4>Trip</h4>
    <hr/>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.From)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.From)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.To)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.To)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DateTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DateTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AvailableSeats)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AvailableSeats)
        </dd>
         <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        @Html.HiddenFor(model => model.Description)

    </dl>
</div>
<div class="fb-like" data-href="http://localhost:55042/Trips/Details/id=(.*)" data-layout="standard" data-action="like" data-show-faces="true" data-share="true"></div><br/>
<div class="fb-comments" data-href="http://localhost:55042/Trips/Details/id=(.*)" data-width="600" data-numposts="5"></div>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
